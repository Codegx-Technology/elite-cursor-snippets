# Core Configuration for Shujaa Studio
app:
  name: "Shujaa Studio"
  version: "0.1.0"
  environment: "development" # development, staging, production
  database_name: "shujaa_db" # Name of the SQLite database file
  cdn_endpoints: # List of CDN endpoints for asset fallback
    - "https://cdn1.example.com/assets/"
    - "https://cdn2.example.com/assets/"
    - "https://fallback.example.com/assets/"
  watched_models: # Models to be continuously monitored for updates
    llm: {"provider": "huggingface", "name": "gpt-neo-2.7B", "type": "text_generation"}
    embedding: {"provider": "openai", "name": "text-embedding-3-small", "type": "embedding"} # Assuming an embedding model type
    tts_voice_xtts: {"provider": "huggingface", "name": "coqui/XTTS-v2", "type": "voice_synthesis"}
    tts_voice_eleven: {"provider": "elevenlabs", "name": "english-female-v1", "type": "voice_synthesis"}
  model_check_interval_seconds: 3600 # How often to check for model updates (1 hour)

# API Keys and Credentials (sensitive, loaded from .env or secrets management)
api_keys:
  huggingface: "${HF_API_KEY}" # Loaded from environment variable
  google_news: "" # Optional: NewsAPI.org key
  youtube_client_secret_file: "client_secret.json" # Path to Google client secret JSON
  secrets_manager:
    enabled: false # Set to true to enable AWS Secrets Manager integration
    region_name: "us-east-1" # AWS region for Secrets Manager
    # Example secret IDs (replace with your actual secret IDs)
    # hf_api_key_secret_id: "shujaa/huggingface/api_key"
    # google_news_api_key_secret_id: "shujaa/google_news/api_key"

# Model Configuration
models:
  disable_model_loading: false # Enable to allow local/API models to load
  text_generation:
    hf_api_id: "mistralai/Mistral-7B-Instruct-v0.2" # Default for scene generation
    local_fallback_path: "" # Path to local LLM model (e.g., LLaMA.cpp compatible)
    versioning: true
    checksum: "" # Optional
    min_health_score: 0.9
  image_generation:
    hf_api_id: "stabilityai/stable-diffusion-xl-base-1.0" # Example HF model
    local_fallback_path: "models/stable-diffusion-2-1" # Path to local Stable Diffusion model
    versioning: true
    checksum: "" # Optional
    min_health_score: 0.9
  voice_synthesis:
    hf_api_id: "suno/bark"
    local_fallback_path: "models/mms-tts-eng" # Path to local Bark/CoquiTTS model
    versioning: true
    checksum: "" # Optional
    min_health_score: 0.9
  speech_to_text:
    hf_api_id: "openai/whisper-large-v2"
    local_fallback_path: "" # Path to local Whisper model
    versioning: true
    checksum: "" # Optional
    min_health_score: 0.9
  tts_models: # New section for TTS models
    elevenlabs:
      provider: "elevenlabs"
      model_name: "elevenlabs-voice-en"
      api_id: "some_elevenlabs_voice_id" # Example ElevenLabs voice ID
      versioning: true
      checksum: "def456" # Example checksum
      min_health_score: 0.9
    xtts_v2:
      provider: "local"
      model_name: "xtts-v2"
      local_fallback_path: "models/tts/xtts-v2" # Path to local XTTS v2 model
      versioning: true
      checksum: "abc123" # Example checksum
      min_health_score: 0.9

# GPU Management (HybridGPUManager settings)
gpu_manager:
  enable_cloud_gpu: false # Set to true to enable RunPod/Vast.ai integration
  cloud_providers_config: "gpu_cloud_config.json" # Configuration for cloud GPU providers

# Video Generation Settings
video:
  default_fps: 24
  default_image_duration: 3 # seconds per image
  output_resolution: [1920, 1080] # [width, height]
  temp_dir: "temp"
  output_dir: "output"
  music_dir: "music"

# Logging Configuration
logging:
  level: "INFO" # DEBUG, INFO, WARNING, ERROR, CRITICAL
  log_file: "logs/shujaa.log"
  max_bytes: 10485760 # 10 MB
  backup_count: 5
  enable_audit_log: true
  audit_log_level: "INFO"
  audit_log_file: "logs/shujaa_audit.log"

auth:
  access_token_expire_minutes: 30 # JWT token expiry time in minutes
  # List of super admin users. 
  # For production, it is STRONGLY recommended to load this from a secure source 
  # using environment variables or a secrets manager instead of hardcoding here.
  # Example for env var: ${SHUJAA_SUPER_ADMINS}
  # The value should be a JSON string of a list of objects, e.g.:
  # '[{"username": "admin1", "email": "admin1@example.com", "password": "securepass1", "role": "admin"}]'
  super_admins:
    - username: "peter"
      email: "peter@shujaa.studio"
      password: "${PETER_PASSWORD}" # Loaded from environment variable
      role: "admin"
    - username: "apollo"
      email: "apollo@shujaa.studio"
      password: "${APOLLO_PASSWORD}" # Loaded from environment variable
      role: "admin"

security:
  encryption_password: "${SHUJAA_ENCRYPTION_PASSWORD}" # Loaded from environment variable
  encryption_salt: "${SHUJAA_ENCRYPTION_SALT}" # Loaded from environment variable

storage:
  provider: "s3" # "local" or "s3"
  s3:
    bucket_name: "shujaa-studio-assets"
    region_name: "us-east-1"
    access_key_id: "${AWS_ACCESS_KEY_ID}"
    secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
    signed_url_expiry: 3600 # in seconds

i18n:
  supported_languages: ["en", "sw", "fr"] # English, Swahili, French
  default_language: "en"

feature_flags:
  new_ui:
    enabled: false
    rollout_percentage: 10 # Rollout to 10% of users
    # users: ["user_id_1", "user_id_2"] # Enable for specific users
    # tenants: ["tenant_id_1"] # Enable for specific tenants
  beta_video_pipeline:
    enabled: false
    # users: ["admin_user"]
  AUTO_ROLLBACK_ON_BOOT:
    enabled: true # Enable auto-rollback on boot by default