replicaCount: 2

image:
  repository: shujaa-studio-api
  pullPolicy: IfNotPresent
  tag: "latest"

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
  hosts:
    - host: shujaa-studio.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

probes:
  liveness:
    enabled: true
    path: /health
    port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
  readiness:
    enabled: true
    path: /health
    port: http
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  startup:
    enabled: false # Enable if app takes long to start
    path: /health
    port: http
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 30

pdb:
  enabled: true
  minAvailable: 1 # or maxUnavailable: 1

networkPolicy:
  enabled: false # Enable and configure specific rules for production
  # Example:
  # allowEgressToDNS: true
  # allowIngressFromNamespace: "ingress-nginx"

secrets:
  enabled: true
  # Example:
  # apiKeys:
  #   name: shujaa-api-keys
  #   items:
  #     - key: HF_TOKEN
  #       secretKey: hf-token
  #     - key: GEMINI_API_KEY
  #       secretKey: gemini-api-key

persistence:
  enabled: false
  size: 10Gi
  storageClassName: standard # Or a specific StorageClass
  mountPath: /app/data

logging:
  enabled: true
  # Example:
  # sidecar:
  #   image: fluentd/fluentd:v1.14-debian
  #   mountPath: /var/log/app
  # logPath: /app/logs

serviceAccount:
  create: true
  name: shujaa-studio-sa

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}