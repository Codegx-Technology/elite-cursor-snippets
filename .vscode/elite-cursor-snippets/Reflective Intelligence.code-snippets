{
  "Daily Reflection": {
    "prefix": "dailyreflection",
    "body": [
      "🧠 **Daily Reflection & Self-Coaching Session**",
      "",
      "**Date:** ${1:Today's date}",
      "**Project:** SalonGenz",
      "**Focus Area:** ${2:Frontend/Backend/UI/UX/Payment/Testing}",
      "",
      "**1. What did I accomplish today?**",
      "${3:List your key achievements}",
      "",
      "**2. What challenges did I face?**",
      "${4:Describe any obstacles or issues}",
      "",
      "**3. What did I learn?**",
      "${5:New skills, insights, or knowledge gained}",
      "",
      "**4. What could I improve?**",
      "${6:Areas for growth or optimization}",
      "",
      "**5. Tomorrow's priorities:**",
      "${7:Key tasks and goals for next session}",
      "",
      "**6. Code quality check:**",
      "- [ ] Followed React conventions (functional components, hooks)",
      "- [ ] Used proper error handling",
      "- [ ] Implemented responsive design",
      "- [ ] Followed Kenya-specific requirements",
      "- [ ] Used Elite AI Prompt Arsenal effectively",
      "",
      "**7. Self-coaching question:**",
      "${8:What would make tomorrow 10% better?}"
    ],
    "description": "Daily reflection and self-coaching for continuous improvement"
  },
  "Daily Boost": {
    "prefix": "dailyboost",
    "body": [
      "🚀 **Daily Startup — Cursor Elite Mode**",
      "",
      "**1. Reminder:** \"I'm Paps. I work clean. I ship Kenya-first.\"",
      "**2. Your ONE high-value output today is:** ${1:Your main goal}",
      "**3. What might block you?** ${2:Be honest about potential obstacles}",
      "**4. AI:** Watch my commits. Be my reviewer. Keep me elite.",
      "**5. Let's go.** 🚀",
      "",
      "**🎯 Elite Arsenal Ready:**",
      "- Use `thinkwithai` for strategic planning",
      "- Use `surgicalfix` for precise fixes",
      "- Use `refactorintent` for clean improvements",
      "- Use `dailyreflection` for end-of-day review",
      "",
      "**🧠 Mindset Check:**",
      "- [ ] I am Paps, elite engineer",
      "- [ ] I don't break things; I evolve them",
      "- [ ] Every line I write is purposeful",
      "- [ ] I follow surgical discipline, no noise, no laziness",
      "- [ ] I ship fast, I ship clean, I ship Kenya-first"
    ],
    "description": "Daily startup ritual for elite mindset and focus"
  },
  "Weekly Review": {
    "prefix": "weeklyreview",
    "body": [
      "📊 **Weekly Performance Review**",
      "",
      "**Week:** ${1:Week number/date range}",
      "**Project:** SalonGenz",
      "",
      "**🎯 Goals Achieved:**",
      "${2:Major accomplishments this week}",
      "",
      "**📈 Metrics & Progress:**",
      "- Components built: ${3:Number}",
      "- Features completed: ${4:List}",
      "- Bugs fixed: ${5:Number}",
      "- Code quality score: ${6:Self-assessment}",
      "",
      "**🧠 Learning Highlights:**",
      "${7:Key learnings and insights}",
      "",
      "**🚧 Challenges & Solutions:**",
      "${8:Problems faced and how they were resolved}",
      "",
      "**⚡ Elite Arsenal Usage:**",
      "- thinkwithai used: ${9:Number} times",
      "- surgicalfix used: ${10:Number} times",
      "- refactorintent used: ${11:Number} times",
      "- Other prompts: ${12:Usage patterns}",
      "",
      "**🎯 Next Week's Focus:**",
      "${13:Priorities and goals}",
      "",
      "**💡 Improvement Ideas:**",
      "${14:Ways to optimize workflow or code quality}"
    ],
    "description": "Weekly performance review and planning"
  },
  "Code Quality Check": {
    "prefix": "qualitycheck",
    "body": [
      "🔍 **Code Quality Self-Assessment**",
      "",
      "**File:** ${1:File name}",
      "**Component:** ${2:Component name}",
      "",
      "**✅ Quality Checklist:**",
      "- [ ] Follows React functional component pattern",
      "- [ ] Uses proper hooks (useState, useEffect, etc.)",
      "- [ ] Implements error handling (try/catch)",
      "- [ ] Uses camelCase naming convention",
      "- [ ] Includes PropTypes for type checking",
      "- [ ] Follows responsive design principles",
      "- [ ] Implements proper form validation",
      "- [ ] Uses React Router correctly",
      "- [ ] Follows Bootstrap 5.3.7 conventions",
      "- [ ] Includes proper comments explaining 'why'",
      "- [ ] Optimized for mobile performance",
      "- [ ] Follows Kenya-specific requirements",
      "",
      "**🎯 Areas for Improvement:**",
      "${3:Specific improvements needed}",
      "",
      "**🚀 Optimization Opportunities:**",
      "${4:Performance or UX enhancements}",
      "",
      "**📝 Refactoring Notes:**",
      "${5:Code that could be refactored}"
    ],
    "description": "Self-assessment for code quality and best practices"
  },
  "Problem Solving Framework": {
    "prefix": "problemsolve",
    "body": [
      "🧩 **Problem Solving Framework**",
      "",
      "**Problem:** ${1:Describe the issue}",
      "**Context:** ${2:Project context and constraints}",
      "",
      "**1. Problem Analysis:**",
      "- What exactly is the problem?",
      "- When does it occur?",
      "- What's the impact?",
      "- What have I already tried?",
      "",
      "**2. Root Cause Investigation:**",
      "- Is this a React component issue?",
      "- Is this a payment flow problem?",
      "- Is this a styling/responsive issue?",
      "- Is this a backend integration issue?",
      "",
      "**3. Solution Brainstorming:**",
      "- Option 1: ${3:First potential solution}",
      "- Option 2: ${4:Second potential solution}",
      "- Option 3: ${5:Third potential solution}",
      "",
      "**4. Best Approach Selection:**",
      "- Chosen solution: ${6:Selected approach}",
      "- Why this approach: ${7:Reasoning}",
      "- Expected outcome: ${8:Expected result}",
      "",
      "**5. Implementation Plan:**",
      "- Step 1: ${9:First step}",
      "- Step 2: ${10:Second step}",
      "- Step 3: ${11:Third step}",
      "",
      "**6. Success Criteria:**",
      "- [ ] Problem resolved",
      "- [ ] No new bugs introduced",
      "- [ ] Code follows project conventions",
      "- [ ] Performance maintained/improved"
    ],
    "description": "Structured problem-solving approach for complex issues"
  },
  "Learning Session": {
    "prefix": "learningsession",
    "body": [
      "📚 **Learning Session**",
      "",
      "**Topic:** ${1:What are you learning?}",
      "**Duration:** ${2:How long will this session take?}",
      "",
      "**🎯 Learning Objectives:**",
      "- [ ] ${3:First objective}",
      "- [ ] ${4:Second objective}",
      "- [ ] ${5:Third objective}",
      "",
      "**📖 Resources:**",
      "- Documentation: ${6:Relevant docs}",
      "- Tutorials: ${7:Helpful tutorials}",
      "- Examples: ${8:Code examples}",
      "",
      "**🧪 Hands-on Practice:**",
      "- Exercise 1: ${9:First practice exercise}",
      "- Exercise 2: ${10:Second practice exercise}",
      "",
      "**💡 Key Takeaways:**",
      "${11:Main insights from this learning session}",
      "",
      "**🔗 Apply to SalonGenz:**",
      "${12:How this learning applies to your project}",
      "",
      "**📝 Next Steps:**",
      "${13:How to continue learning this topic}"
    ],
    "description": "Structured learning session for skill development"
  },
  "Performance Optimization": {
    "prefix": "optimize",
    "body": [
      "⚡ **Performance Optimization Session**",
      "",
      "**Target:** ${1:Component/feature to optimize}",
      "**Current Performance:** ${2:Baseline metrics}",
      "",
      "**🔍 Performance Analysis:**",
      "- Bundle size impact: ${3:Current size}",
      "- Loading time: ${4:Current loading time}",
      "- Render performance: ${5:Current render metrics}",
      "- Mobile performance: ${6:Mobile-specific issues}",
      "",
      "**🎯 Optimization Strategies:**",
      "- [ ] Implement lazy loading",
      "- [ ] Optimize images and assets",
      "- [ ] Use React.memo for expensive components",
      "- [ ] Implement code splitting",
      "- [ ] Optimize CSS and styling",
      "- [ ] Reduce API calls",
      "- [ ] Implement caching strategies",
      "",
      "**🚀 Implementation Plan:**",
      "- Phase 1: ${7:First optimization phase}",
      "- Phase 2: ${8:Second optimization phase}",
      "- Phase 3: ${9:Third optimization phase}",
      "",
      "**📊 Success Metrics:**",
      "- Target bundle size: ${10:Target size}",
      "- Target loading time: ${11:Target loading time}",
      "- Target render performance: ${12:Target render metrics}",
      "",
      "**✅ Post-Optimization Check:**",
      "- [ ] Performance improved",
      "- [ ] No functionality broken",
      "- [ ] Mobile experience enhanced",
      "- [ ] User experience maintained"
    ],
    "description": "Performance optimization planning and execution"
  },
  "Team Collaboration": {
    "prefix": "teamcollab",
    "body": [
      "👥 **Team Collaboration Session**",
      "",
      "**Meeting Type:** ${1:Code review/Planning/Brainstorming}",
      "**Participants:** ${2:Team members involved}",
      "",
      "**📋 Agenda:**",
      "- Item 1: ${3:First agenda item}",
      "- Item 2: ${4:Second agenda item}",
      "- Item 3: ${5:Third agenda item}",
      "",
      "**🎯 Goals:**",
      "- [ ] ${6:First goal}",
      "- [ ] ${7:Second goal}",
      "- [ ] ${8:Third goal}",
      "",
      "**💡 Discussion Points:**",
      "${9:Key points to discuss}",
      "",
      "**🤝 Action Items:**",
      "- [ ] ${10:First action item} (Owner: ${11:Who})",
      "- [ ] ${12:Second action item} (Owner: ${13:Who})",
      "",
      "**📅 Follow-up:**",
      "- Next meeting: ${14:When}",
      "- Deliverables: ${15:What needs to be delivered}",
      "",
      "**📝 Notes:**",
      "${16:Important decisions or insights}"
    ],
    "description": "Team collaboration and meeting structure"
  }
} 